{"version":3,"sources":["services/api.js","store/reducers.js","services/authentication.js","store/authentication/actions.js","store/authentication/constants.js","components/Generic/Icon/index.js","components/Generic/Button/index.js","components/Navbar/index.js","components/Navbar/wrapper.js","filters/date.js","components/Task/Item/index.js","components/Task/List/index.js","services/task.js","store/authentication/reducers.js","store/tasks/reducers.js","store/tasks/constants.js","store/index.js","store/tasks/actions.js","views/Task/List/index.js","components/Generic/Form/index.js","components/Generic/Label/index.js","components/Task/Input/index.js","views/Generic/index.js","views/Task/EditableGeneric/index.js","views/Task/Create/index.js","views/Task/Edit/index.js","views/Task/Display/index.js","components/Authentication/Form/index.js","views/Authentication/Generic/index.js","views/Authentication/SignUp/index.js","views/Authentication/SignIn/index.js","router/index.js","App.js","serviceWorker.js","index.js"],"names":["Resource","Axios","create","baseURL","transformResponse","response","JSON","parse","error","withCredentials","interceptors","use","status","data","Promise","reject","Error","history","normalizeAccount","_ref","id","_id","username","createdAt","created","Date","signIn","_ref3","Object","asyncToGenerator","regenerator_default","a","mark","_callee","_ref2","password","account","wrap","_context","prev","next","post","sent","abrupt","stop","_x","apply","this","arguments","signUp","_ref5","_callee2","_ref4","_context2","message","console","log","_x2","signOut","_ref6","_callee3","_context3","load","_ref7","_callee4","_context4","get","t0","dispatch","type","loading","AuthenticationService","loadAccount","Icon","props","react_default","createElement","dist_default","className","icon","GenericButtonInner","children","text","react","Button","link","_ref2$action","action","inverted","objectWithoutProperties","inner","Button_GenericButtonInner","classes","concat","toConsumableArray","react_router_dom","assign","join","to","Navbar","onClick","NavbarWrapper","Component","connect","authentication","objectSpread","date","toLocaleString","Item","task","authenticated","onRemoveTask","title","filterDate","updated","List","_ref$list","list","map","key","normalizeTask","owner","updatedAt","description","tasks","publish","edit","_x3","remove","_x4","defaultState","reducers","state","length","undefined","tasks_reducers","_action$tasks","item","filter","createBrowserHistory","store","createStore","combineReducers","router","connectRouter","compose","applyMiddleware","routerMiddleware","listTasks","getState","TaskService","loadTask","find","addTask","editTask","removeTask","_callee5","_context5","_x5","TaskListView","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","bind","assertThisInitialized","_this$props","Form","onSubmitProp","onSubmit","event","preventDefault","Label","TaskInput","onChange","onDiscard","property","value","defineProperty","_this$props$task","onPublish","_this$props$flow","flow","placeholder","target","required","minLength","maxLength","autoFocus","autoCapitalize","GenericView","redirectToHome","goBack","push","TaskEditableGenericView","setState","publishAction","trim","TaskCreateView","Input_TaskInput","match","params","TaskDisplayView","isOwned","AuthenticationForm","_this$state2","spellCheck","autoCorrect","autoComplete","GenericAuthenticationView","onAutheticationAction","AuthenticationSignInView","Authentication_Form","react_router","path","component","AuthenticationSignUpView","TaskEditView","TasksView","StartUpInner","StartUp","App","es","esm","wrapper","Boolean","window","location","hostname","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.137d06a6.chunk.js","sourcesContent":["import Axios from 'axios';\n\n// const API_URL = 'http://localhost:5000/api';\nconst API_URL = '/api';\n\nconst Resource = Axios.create({\n  baseURL: API_URL,\n  transformResponse: response => {\n    try {\n      response = JSON.parse(response);\n      return response;\n    } catch (error) {\n      return { error };\n    }\n  },\n  withCredentials: true\n});\n\nResource.interceptors.response.use(response => {\n  if (\n    response &&\n    response.status >= 200 &&\n    response.status < 400 &&\n    response.data\n  ) {\n    return response.data;\n  } else {\n    return Promise.reject(new Error('Error in API service.'));\n  }\n}, error => {\n  return Promise.reject(error);\n});\n\nexport default Resource;\n","import { combineReducers } from 'redux';\nimport { connectRouter } from 'connected-react-router'\nimport authentication from './authentication/reducers';\nimport tasks from './tasks/reducers';\n\nexport default history => combineReducers({\n  router: connectRouter(history),\n  authentication,\n  tasks\n});\n","import Resource from './api';\n\nconst normalizeAccount = ({\n  _id: id,\n  username,\n  createdAt\n}) => ({\n  id,\n  username,\n  created: new Date(createdAt)\n});\n\nexport const signIn = async ({ username, password }) => {\n  const account = await Resource.post('/login', { username, password });\n  return normalizeAccount(account);\n};\n\nexport const signUp = async ({ username, password }) => {\n  const data = await Resource.post('/signup', { username, password });\n  if (data.message) {\n    console.log(data.message);\n    throw new Error('Error signing up.');\n  } else {\n    return normalizeAccount(data);\n  }\n};\n\nexport const signOut = async () => {\n  await Resource.post('/logout');\n  return;\n};\n\nexport const load = async () => {\n  try {\n    const account = await Resource.get('/loggedin');\n    return normalizeAccount(account);\n  } catch (error) {\n    // 403 Status means user isn't logged in,\n    // shouldn't throw an error\n    if (error.response.status !== 403) throw error;\n  }\n};\n","import {\n  ACCOUNT_LOAD,\n  ACCOUNT_SIGN_OUT,\n  AUTHENTICATION_LOADING\n} from './constants';\n\nimport * as AuthenticationService from 'services/authentication';\n\nexport const signIn = dispatch => async data => {\n  dispatch({ type: AUTHENTICATION_LOADING, loading: true });\n  const account = await AuthenticationService.signIn(data);\n  dispatch({ type: ACCOUNT_LOAD, account });\n  dispatch({ type: AUTHENTICATION_LOADING, loading: false });\n};\n\nexport const signUp = dispatch => async data => {\n  dispatch({ type: AUTHENTICATION_LOADING, loading: true });\n  const account = await AuthenticationService.signUp(data);\n  dispatch({ type: ACCOUNT_LOAD, account });\n  dispatch({ type: AUTHENTICATION_LOADING, loading: false });\n};\n\nexport const loadAccount = dispatch => async () => {\n  dispatch({ type: AUTHENTICATION_LOADING, loading: true });\n  const account = await AuthenticationService.load();\n  dispatch({ type: ACCOUNT_LOAD, account });\n  dispatch({ type: AUTHENTICATION_LOADING, loading: false });\n};\n\nexport const signOut = dispatch => async () => {\n  dispatch({ type: AUTHENTICATION_LOADING, loading: true });\n  await AuthenticationService.signOut();\n  dispatch({ type: ACCOUNT_SIGN_OUT });\n  dispatch({ type: AUTHENTICATION_LOADING, loading: false });\n};\n","export const ACCOUNT_LOAD = 'ACCOUNT_LOAD';\nexport const ACCOUNT_SIGN_OUT = 'ACCOUNT_SIGN_OUT';\nexport const AUTHENTICATION_LOADING = 'AUTHENTICATION_LOADING';\n","import React from 'react';\nimport './style.scss';\nimport MaterialIcon from '@material/react-material-icon';\n \nexport default props => {\n  return (\n    <MaterialIcon className=\"icon generic-icon\" icon={ props.icon } />\n  );\n};\n","import React, { Fragment } from 'react';\nimport { Link } from 'react-router-dom';\nimport './style.scss';\nimport GenericIcon from './../Icon';\n\nconst GenericButtonInner = ({ children, icon, text }) => (\n  <Fragment>\n    { icon && (\n      <GenericIcon icon={ icon } />\n    )}\n    { text && (\n      <span>{ text }</span>\n    )}\n    { children }\n  </Fragment>\n);\n\nexport default ({ children, link, action = 'button', inverted, ...props }) => {\n  const inner = <GenericButtonInner { ...props }>{ children }</GenericButtonInner>;\n  const classes = [ 'btn', ...inverted ? [ 'btn--inverted' ] : [] ];\n  return ( !link ? (\n    <button className={ classes.join(' ') } type={ action } { ...props } >{ inner }</button>\n  ) : (\n    <Link className={ classes.join(' ') } to={ link } { ...props } >{ inner }</Link>\n  ));\n};\n","import React, { Fragment } from 'react';\nimport './style.scss';\nimport GenericButton from 'components/Generic/Button';\n\nexport default ({ account, signOut }) => (\n  <header className=\"navbar\">\n    <div className=\"container\">\n      <GenericButton icon=\"details\" text=\"Task Manager\" link=\"/\" />\n      { !account ? (\n          <Fragment>\n            <GenericButton link=\"/authentication/sign-up\">Sign Up</GenericButton>\n            <GenericButton link=\"/authentication/sign-in\">Sign In</GenericButton>\n          </Fragment>\n        ) : (\n          <GenericButton onClick={ signOut }>Sign Out</GenericButton>\n        )\n      }\n    </div>\n  </header>\n);\n","import React, { Component } from 'react';\n\nimport { connect } from 'react-redux';\nimport { signOut } from 'store/authentication/actions';\n\nimport AppHeader from '.';\n\nconst mapStateToProps = ({ authentication }) => ({\n  ...authentication\n});\n\nconst mapDispatchToProps = dispatch => ({\n  signOut: signOut(dispatch)\n});\n\nclass NavbarWrapper extends Component {\n  render () {\n    return <AppHeader { ...this.props } />;\n  }\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(NavbarWrapper);\n","export default date => date && date.toLocaleString();\n","import React from 'react';\nimport './style.scss';\nimport GenericButton from 'components/Generic/Button';\nimport { date as filterDate } from 'filters';\n\nexport default ({ task, authenticated, onRemoveTask }) => {\n  return (\n    <div className=\"task__item\">\n      <GenericButton\n        className=\"task__item__body\"\n        link={ `/task/${ task.id }` }\n      >\n        <span className=\"task__item__title\">{ task.title }</span>\n        <small>{ filterDate(task.updated || task.created) }</small>\n      </GenericButton>\n      <div className=\"task__item__actions\">\n        { authenticated && (\n          <GenericButton\n            icon=\"check\"\n            onClick={ onRemoveTask }\n          />\n        ) }\n      </div>\n    </div>\n  );\n}\n","import React from 'react';\nimport './style.scss';\nimport TaskItem from './../Item/index';\n\nexport default ({ list = [], authenticated, onRemoveTask }) => {\n  return (\n    <div className=\"task__list\">\n      { list.map(task => (\n        <TaskItem\n          key={ task.id }\n          task={ task }\n          authenticated={ authenticated }\n          onRemoveTask={ () => onRemoveTask(task.id) }\n        />\n      )) }\n    </div>\n  );\n}\n","import Resource from './api';\n\nconst normalizeTask = ({\n  _id: id,\n  owner,\n  createdAt,\n  updatedAt,\n  title,\n  description,\n}) => ({\n  id,\n  owner,\n  created: new Date(createdAt),\n  ...createdAt !== updatedAt && { updated: new Date(updatedAt) },\n  title,\n  description\n});\n\nexport const list = async () => {\n  const tasks = await Resource.get('/tasks');\n  return tasks.map(normalizeTask);\n};\n\nexport const publish = async ({ title, description }) => {\n  const task = await Resource.post('/tasks/create', { title, description });\n  return normalizeTask(task);\n};\n\nexport const edit = async (id, { title, description }) => {\n  const task = await Resource.post(`/tasks/edit/${ id }`, { title, description });\n  // API isn't returning the edited version of the task.\n  // return normalizeTask(task);\n  return normalizeTask({ ...task, title, description });\n};\n\nexport const remove = async id => {\n  await Resource.post(`/tasks/delete/${ id }`);\n  console.log('Removed task', id);\n  return;\n};\n","import {\n  ACCOUNT_LOAD,\n  ACCOUNT_SIGN_OUT\n} from './constants';\n\nconst defaultState = {\n  account: null\n};\n\nexport default (state = defaultState, action) => {\n  switch (action.type) {\n    case ACCOUNT_LOAD:\n      const { account } = action;\n      return {\n        ...state,\n        account\n      };\n    case ACCOUNT_SIGN_OUT:\n      return {\n        ...state,\n        account: defaultState.account\n      };\n    default:\n      return state;\n  }\n};\n","import {\n  TASK_LIST,\n  TASK_ADD,\n  TASK_EDIT,\n  TASK_REMOVE\n} from './constants';\n\nconst defaultState = {\n  list: []\n};\n\nexport default (state = defaultState, action) => {\n  switch (action.type) {\n    case TASK_LIST:\n      const { tasks = [] } = action;\n      return {\n        ...state,\n        list: tasks\n      };\n    case TASK_ADD:\n      const { task } = action;\n      return {\n        ...state,\n        list: [ task, ...state.list ]\n      };\n    case TASK_EDIT:\n      return {\n        ...state,\n        list: state.list.map(item => item.id === action.id ? action.task : item)\n      };\n    case TASK_REMOVE:\n      const { id } = action;\n      return {\n        ...state,\n        list: state.list.filter(task => task.id !== id)\n      };\n    default:\n      return state;\n  }\n};\n","export const TASK_LIST = 'TASK_LIST';\nexport const TASK_ADD = 'TASK_ADD';\nexport const TASK_EDIT = 'TASK_EDIT';\nexport const TASK_REMOVE = 'TASK_REMOVE';\nexport const TASKS_LOADING = 'TASKS_LOADING';\n","import { createBrowserHistory } from 'history'\nimport { applyMiddleware, compose, createStore } from 'redux'\nimport { routerMiddleware } from 'connected-react-router'\n\nimport createRootReducer from './reducers';\n\nexport const history = createBrowserHistory()\n\nconst initialState = {};\n\nexport const store = createStore(\n  createRootReducer(history),\n  initialState,\n  compose(applyMiddleware(routerMiddleware(history)))\n);\n","import {\n  TASK_LIST,\n  TASK_ADD,\n  TASK_EDIT,\n  TASK_REMOVE\n} from './constants';\n\nimport * as TaskService from 'services/task';\n\nimport { store } from 'store';\n\nexport const listTasks = dispatch => async () => {\n  const hasLoadedTasks = !!store.getState().tasks.list.length;\n  if (!hasLoadedTasks) {\n    const tasks = await TaskService.list();\n    dispatch({ type: TASK_LIST, tasks });\n  }\n};\n\nexport const loadTask = dispatch => async id => {\n  await listTasks(dispatch)();\n  const tasks = store.getState().tasks.list;\n  const task = tasks.find(item => item.id === id);\n  if (!task) throw new Error('Task not found.');\n  return task;\n};\n\nexport const addTask = dispatch => async ({ title, description }) => {\n  const task = await TaskService.publish({ title, description });\n  dispatch({ type: TASK_ADD, task });\n};\n\nexport const editTask = dispatch => async (id, { title, description }) => {\n  const task = await TaskService.edit(id, { title, description });\n  dispatch({ type: TASK_EDIT, id, task });\n};\n\nexport const removeTask = dispatch => async id => {\n  await TaskService.remove(id);\n  dispatch({ type: TASK_REMOVE, id });\n};\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport './style.scss';\nimport GenericButton from 'components/Generic/Button';\nimport TaskList from 'components/Task/List';\n\nimport { listTasks, removeTask } from 'store/tasks/actions';\n\nconst mapStateToProps = ({ authentication, tasks }) => ({\n  ...authentication,\n  ...tasks\n});\n\nconst mapDispatchToProps = dispatch => ({\n  listTasks: listTasks(dispatch),\n  removeTask: removeTask(dispatch)\n});\n\nclass TaskListView extends Component {\n  constructor (props) {\n    super(props);\n    this.onRemoveTask = this.onRemoveTask.bind(this);\n  }\n  async componentDidMount () {\n    await this.props.listTasks();\n  }\n\n  async onRemoveTask (id) {\n    await this.props.removeTask(id);\n  }\n\n  render () {\n    const {\n      props: { account, list },\n      onRemoveTask\n    } = this;\n\n    return (\n      <div className=\"view view--task--list\">\n        <div className=\"container\">\n          { list.length ? (\n              <TaskList\n                list={ list }\n                authenticated={ !!account }\n                onRemoveTask={ onRemoveTask }\n              />\n            ) : (\n              <div className=\"task__list__placeholder\">\n                <span>There are no tasks yet...</span>\n              </div>\n            )\n          }\n        </div>\n        { account ? (\n          <GenericButton\n            icon=\"add\"\n            link=\"/task/add\"\n            text=\"Add Task\"\n          />\n        ) : (\n          <GenericButton\n            icon=\"add\"\n            link=\"/authentication/sign-in\"\n            text=\"Sign in to Add Task\"\n          />\n        )}\n      </div>\n    );\n  }\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(TaskListView);\n","import React from 'react';\nimport './style.scss';\n\nexport default ({ children, onSubmit: onSubmitProp, className, ...props }) => {\n  const onSubmit = event => {\n    event.preventDefault();\n    onSubmitProp && onSubmitProp();\n  };\n\n  return (\n    <form\n      className={ [ \"generic-form\", className ].filter(item => item).join(' ') }\n      onSubmit={ onSubmit }\n      { ...props }\n    >{ children }</form>\n  );\n};\n","import React from 'react';\nimport './style.scss';\n\nexport default props => (\n  <label className=\"generic-label\">{ props.text }</label>\n);\n","import React, { Component } from 'react';\n\nimport './style.scss';\nimport GenericButton from 'components/Generic/Button';\nimport GenericForm from 'components/Generic/Form';\nimport GenericLabel from 'components/Generic/Label';\n\nexport default class TaskInput extends Component {\n  constructor(props) {\n    super(props);\n    this.onChange = this.onChange.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n    this.onDiscard = this.onSubmit.bind(this);\n  }\n\n  async onChange (property, value) {\n    this.props.onChange({ ...this.props.task, [ property ]: value });\n  }\n\n  onSubmit () {\n    const { props: { task: { title, description } } } = this;\n    // const valid = Object.values({ title, description }).every(value => value.length >= 3);\n    const valid = title.length >= 3;\n    if (!valid) return;\n    this.props.onPublish({ title, description });\n  }\n\n  onDiscard () {\n    this.props.onDiscard();\n  }\n\n  render () {\n    const {\n      props: {\n        task,\n        flow = 'create'\n      },\n      onChange,\n      onSubmit,\n      onDiscard\n    } = this;\n    return (\n      <GenericForm\n        className=\"task__input\"\n        onSubmit={ onSubmit }\n      >\n        <GenericLabel text=\"Task Title\" />\n        <input\n          className=\"task__input__title\"\n          type=\"text\"\n          placeholder=\"Title\"\n          value={ task.title }\n          onChange={ event => onChange('title', event.target.value) }\n          required\n          minLength=\"3\"\n          maxLength=\"120\"\n          autoFocus\n          autoCapitalize\n        />\n        <GenericLabel text=\"Task Description\" />\n        <textarea\n          className=\"task__input__description\"\n          placeholder=\"Description\"\n          value={ task.description }\n          onChange={ event => onChange('description', event.target.value) }\n          maxLength=\"1000\"\n        />\n        <div className=\"btn__group\">\n          {/* <GenericButton onClick={ onDiscard }>Discard</GenericButton> */}\n          <GenericButton\n            icon=\"undo\"\n            text={ flow === 'create' ? 'Discard' : 'Go Back' }\n            onClick={ onDiscard }\n          />\n          <GenericButton\n            icon=\"chevron_right\"\n            text={ flow === 'create' ? 'Publish' : 'Edit' }\n            inverted\n            action=\"submit\"\n          />\n        </div>\n      </GenericForm>\n    );\n  }\n}\n","import { Component } from 'react';\nimport './style.scss';\n\n// Generic View\n// Should contain methods and state common views\n\nexport default class GenericView extends Component {\n  constructor (props) {\n    super(props);\n    this.redirectToHome = this.redirectToHome.bind(this);\n    this.goBack = this.goBack.bind(this);\n  }\n  redirectToHome () {\n    this.props.history.push('/');\n  }\n\n  goBack () {\n    this.props.history.goBack();\n  }\n};\n","import './style.scss';\nimport GenericView from 'views/Generic';\n\nexport default class TaskEditableGenericView extends GenericView {\n  constructor (props) {\n    super(props);\n    this.state = {\n      task: {\n        title: '',\n        description: ''\n      }\n    };\n    this.onChange = this.onChange.bind(this);\n    this.onPublish = this.onPublish.bind(this);\n  }\n\n  async onChange (task) {\n    this.setState({ task });\n  }\n\n  async onPublish ({ title, description }) {\n    await this.publishAction({ title: title.trim(), description: description.trim() });\n    this.redirectToHome();\n  }\n};\n","import React from 'react';\nimport { connect } from 'react-redux';\n\nimport './style.scss';\nimport TaskInput from 'components/Task/Input';\nimport TaskEditableGenericView from 'views/Task/EditableGeneric';\nimport { addTask } from 'store/tasks/actions';\n\nconst mapDispatchToProps = dispatch => ({\n  addTask: addTask(dispatch)\n});\n\nclass TaskCreateView extends TaskEditableGenericView {\n  constructor (props) {\n    super(props);\n    this.publishAction = this.publishAction.bind(this);\n  }\n\n  async publishAction ({ title, description }) {\n    await this.props.addTask({ title, description });\n  }\n\n  render () {\n    const {\n      state: {\n        task\n      },\n      onChange,\n      onPublish,\n      goBack: onDiscard\n    } = this;\n\n    return (\n      <div className=\"view view--task--editable view--task--create\">\n        <div className=\"container\">\n          <TaskInput\n            task={ task }\n            onChange={ onChange }\n            onPublish={ onPublish }\n            onDiscard={ onDiscard }\n            flow=\"create\"\n          />\n        </div>\n      </div>\n    );\n  }\n};\n\nexport default connect(\n  null,\n  mapDispatchToProps\n)(TaskCreateView);\n","import React from 'react';\nimport { connect } from 'react-redux';\n\nimport './style.scss';\nimport TaskInput from 'components/Task/Input';\nimport TaskEditableGenericView from 'views/Task/EditableGeneric';\nimport { loadTask, editTask } from 'store/tasks/actions';\n\nconst mapDispatchToProps = dispatch => ({\n  loadTask: loadTask(dispatch),\n  editTask: editTask(dispatch)\n});\n\nclass TaskCreateView extends TaskEditableGenericView {\n  constructor (props) {\n    super(props);\n    this.publishAction = this.publishAction.bind(this);\n  }\n\n  get id () {\n    return this.props.match.params.id;\n  }\n\n  async publishAction ({ title, description }) {\n    await this.props.editTask(this.id, { title, description });\n  }\n  \n  async componentDidMount () {\n    const task = await this.props.loadTask(this.id);\n    this.setState({ task });\n  }\n\n  render () {\n    const {\n      state: {\n        task\n      },\n      onChange,\n      onPublish,\n      goBack: onDiscard\n    } = this;\n\n    return (\n      <div className=\"view view--task--editable view--task--edit\">\n        <div className=\"container\">\n          <TaskInput\n            task={ task }\n            onChange={ onChange }\n            onPublish={ onPublish }\n            onDiscard={ onDiscard }\n            flow=\"edit\"\n          />\n        </div>\n      </div>\n    );\n  }\n};\n\nexport default connect(\n  null,\n  mapDispatchToProps\n)(TaskCreateView);\n","import React from 'react';\nimport { connect } from 'react-redux';\n\nimport './style.scss';\nimport { date as filterDate } from 'filters';\nimport GenericView from 'views/Generic';\nimport GenericButton from 'components/Generic/Button';\nimport GenericIcon from 'components/Generic/Icon';\nimport GenericLabel from 'components/Generic/Label';\nimport { loadTask, removeTask } from 'store/tasks/actions';\n\nconst mapStateToProps = ({ authentication }) => ({\n  ...authentication\n});\n\nconst mapDispatchToProps = dispatch => ({\n  loadTask: loadTask(dispatch),\n  removeTask: removeTask(dispatch)\n});\n\nclass TaskDisplayView extends GenericView {\n  constructor (props) {\n    super(props);\n    this.state = {\n      task: {\n        title: '',\n        description: '',\n        created: null,\n        updated: null,\n        owner: null\n      }\n    };\n    this.onRemoveTask = this.onRemoveTask.bind(this);\n  }\n\n  get id () {\n    return this.props.match.params.id;\n  }\n\n  get isOwned () {\n    const creator = this.state.task.owner;\n    const account = this.props.account && this.props.account.id;\n    return creator === account;\n  }\n\n  async onRemoveTask () {\n    await this.props.removeTask(this.id);\n    this.redirectToHome();\n  }\n\n  async componentDidMount () {\n    const task = await this.props.loadTask(this.id);\n    this.setState({ task });\n  }\n\n  render () {\n    const {\n      state: { task },\n      id,\n      isOwned,\n      onRemoveTask\n    } = this;\n\n    return (\n      <div className=\"view view--task--display\">\n        <div className=\"container\">\n          <div className=\"task__title\">\n            <GenericLabel text=\"Task Title\" />\n            <h1>{ task.title }</h1>\n          </div>\n          <div className=\"task__details\">\n            <div>\n              <GenericLabel text=\"Creation Date\" />\n              <small>{ filterDate(task.created) }</small>\n            </div>\n            { task.updated && (\n              <div>\n                <GenericLabel text=\"Update Date\" />\n                <small>{ filterDate(task.updated) }</small>\n              </div>\n            ) }\n            <div>\n              <GenericLabel text=\"Owner\" />\n              <small className=\"detail__iconed\">\n                { isOwned && <GenericIcon icon=\"how_to_reg\" /> }\n                { isOwned ? 'Owned by me' : 'Not owned by me' }\n              </small>\n            </div>\n          </div>\n          { task.description && (\n            <div className=\"task__description\">\n              <GenericLabel text=\"Description\" />\n              <p>{ task.description }</p>\n            </div>\n          ) }\n          <div className=\"btn__group\">\n            <GenericButton icon=\"edit\" text=\"Edit\" link={ `/task/${ id }/edit` } />\n            <GenericButton icon=\"check\" text=\"Mark as Completed\" onClick={ onRemoveTask } />\n          </div>\n        </div>\n      </div>\n    );\n  }\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(TaskDisplayView);\n","import React, { Component } from 'react';\nimport './style.scss';\nimport GenericButton from 'components/Generic/Button';\nimport GenericForm from 'components/Generic/Form';\n\nclass AuthenticationForm extends Component {\n  constructor (props) {\n    super(props);\n    this.state = {\n      username: '',\n      password: ''\n    };\n    this.onChange = this.onChange.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  async onChange (property, value) {\n    this.setState({ [ property ]: value });\n  }\n\n  async onSubmit () {\n    const { state: { username, password }, props: { onSubmit } } = this;\n    await onSubmit({ username, password });\n  }\n\n  render () {\n    const {\n      state: {\n        username,\n        password\n      },\n      props: {\n        action\n      },\n      onChange,\n      onSubmit\n    } = this;\n\n    return (\n      <GenericForm onSubmit={ onSubmit }>\n        <input\n          placeholder=\"Username\"\n          type=\"text\"\n          value={ username }\n          onChange={ event => onChange('username', event.target.value) }\n          autoFocus\n          autoCapitalize=\"off\"\n          spellCheck=\"off\"\n          autoCorrect=\"off\"\n          autoComplete=\"off\"\n          minLength=\"7\"\n        />\n        <input\n          placeholder=\"Password\"\n          type=\"password\"\n          value={ password }\n          onChange={ event => onChange('password', event.target.value) }\n          minLength=\"7\"\n        />\n        <GenericButton\n          action=\"submit\"\n          text={ action }\n        />\n      </GenericForm>\n    );\n  }\n};\n\nexport default AuthenticationForm;\n","import GenericView from 'views/Generic';\nimport './style.scss';\n\n// Generic Authentication View\n// Should contain methods and state common to authentication views\n\nexport default class GenericAuthenticationView extends GenericView {\n  constructor (props) {\n    super(props);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  async onSubmit ({ username, password }) {\n    try {\n      await this.onAutheticationAction({ username, password });\n      this.redirectToHome();\n    } catch (error) {\n      console.log(error);\n    }\n  }\n};\n","import React from 'react';\nimport { connect } from 'react-redux';\n\nimport './style.scss';\nimport AuthenticationForm from 'components/Authentication/Form';\nimport GenericAuthenticationView from 'views/Authentication/Generic';\n\nimport { signUp } from 'store/authentication/actions';\n\nconst mapDispatchToProps = dispatch => ({\n  signUp: signUp(dispatch)\n});\n\nclass AuthenticationSignInView extends GenericAuthenticationView {\n  constructor (props) {\n    super(props);\n    this.onAutheticationAction = this.onAutheticationAction.bind(this);\n  }\n\n  async onAutheticationAction ({ username, password }) {\n    await this.props.signUp({ username, password });\n  }\n  \n  render () {\n    const { onSubmit } = this;\n    return (\n      <div className=\"view view--authentication view--authentication--sign-up\">\n        <div className=\"container\">\n          <h1>Sign Up</h1>\n          <h3>By signing up you'll be able to add and edit tasks</h3>\n          <AuthenticationForm onSubmit={ onSubmit } action=\"Sign Up\"/>\n        </div>\n      </div>\n    );\n  }\n};\n\nexport default connect(\n  null,\n  mapDispatchToProps\n)(AuthenticationSignInView);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport './style.scss';\nimport AuthenticationForm from 'components/Authentication/Form';\nimport GenericAuthenticationView from 'views/Authentication/Generic';\n\nimport { signIn } from 'store/authentication/actions';\n\nconst mapDispatchToProps = dispatch => ({\n  signIn: signIn(dispatch)\n});\n\nclass AuthenticationSignInView extends GenericAuthenticationView {\n  constructor (props) {\n    super(props);\n    this.onAutheticationAction = this.onAutheticationAction.bind(this);\n  }\n\n  async onAutheticationAction ({ username, password }) {\n    await this.props.signIn({ username, password });\n  }\n  \n  render () {\n    const { onSubmit } = this;\n    return (\n      <div className=\"view view--authentication view--authentication--sign-in\">\n        <div className=\"container\">\n          <h1>Sign In</h1>\n          <h3>Users get to add, edit and remove tasks</h3>\n          <AuthenticationForm onSubmit={ onSubmit } action=\"Sign In\"/>\n        </div>\n      </div>\n    );\n  }\n};\n\nexport default connect(\n  null,\n  mapDispatchToProps\n)(AuthenticationSignInView);\n","import React from \"react\";\nimport { Route, Switch } from 'react-router'\n\nimport TasksView from 'views/Task/List';\nimport TaskCreateView from 'views/Task/Create';\nimport TaskEditView from 'views/Task/Edit';\nimport TaskDisplayView from 'views/Task/Display';\nimport AuthenticationSignUpView from 'views/Authentication/SignUp';\nimport AuthenticationSignInView from 'views/Authentication/SignIn';\n\nexport default () => (\n  <Switch>\n    <Route path=\"/authentication/sign-up\" component={ AuthenticationSignUpView }/>\n    <Route path=\"/authentication/sign-in\" component={ AuthenticationSignInView }/>\n    <Route path=\"/task/add\" component={ TaskCreateView }/>\n    <Route path=\"/task/:id/edit\" component={ TaskEditView }/>\n    <Route path=\"/task/:id\" component={ TaskDisplayView }/>\n    <Route path=\"/\" component={ TasksView }/>\n  </Switch>\n);\n","import React, { Component, Fragment } from \"react\";\nimport { Provider, connect } from 'react-redux';\nimport { ConnectedRouter as Router } from 'connected-react-router'\nimport './App.scss';\n// import AppNavbar from './components/Navbar';\nimport AppNavbar from './components/Navbar/wrapper';\nimport Routes from './router';\n\nimport { store, history } from './store';\n\nimport { loadAccount } from 'store/authentication/actions';\n\nconst mapStateToProps = ({ account }) => ({\n  account\n});\n\nconst mapDispatchToProps = dispatch => ({\n  loadAccount: loadAccount(dispatch)\n});\n\nclass StartUpInner extends Component {\n  componentDidMount () {\n    this.props.loadAccount();\n  }\n\n  render () {\n    return (\n      <Fragment>{ this.props.children }</Fragment>\n    );\n  }\n};\n\nconst StartUp = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(StartUpInner);\n\nclass App extends Component {\n  render () {\n    return (\n      <Provider store={ store }>\n        <StartUp>\n          <Router history={ history }>\n            <Fragment>\n              <AppNavbar />\n              <Routes />\n            </Fragment>\n          </Router>\n        </StartUp>\n      </Provider>\n    );\n  }\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'style/base.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n\n// {/* <link href=\"https://fonts.googleapis.com/icon?family=Material+Icons\" rel=\"stylesheet\"></link> */}\n"],"sourceRoot":""}